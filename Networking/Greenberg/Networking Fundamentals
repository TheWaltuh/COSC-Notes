UserCTFD:MAGR-503-M
ssh student@10.50.32.89 -X
README file located in home directory has tons of useful information for the mod
All Linux based
curl cht.sh/<command>

----Network Traffic Sniffing
  Promiscious Mode- being able to see traffic that may not necessarily meant for you
----Wireshark, Tshark, TCPdump, and BPFs
---TCP Dump Demo
  used to capture and display the contents of packets traversing a network interface
  sudo tcpdump -D
    Print the list of the network interfaces available on the system
      1.eth0 [Up, Running]
      2.any (Pseudo-device that captures on all interfaces) [Up, Running]
      3.lo [Up, Running, Loopback]
      4.nflog (Linux netfilter log (NFLOG) interface)
      5.nfqueue (Linux netfilter queue (NFQUEUE) interface)
  sudo tcpdump -i eth0
    If a different interface is needed, it must be specified
  sudo tcpdump -X
    Displays packet data in HEX and ASCII
  sudo tcpdump -XX
    Displays the packet data in HEX and ASCII to include the Ethernet portion
  sudo tcpdump -w file.pcap
    Writes the packet to a file
  sudo tcpdump -r file.pcap
    Reads the pcap file
  tcpdump -v
    Gives more verbose output with details on the time to live, IPID, total length, options, and flags
      192.168.249.133.56138 > internet-host-student-5.ssh: Flags [.], cksum 0x5b12 (correct), seq 12029, ack 235724, win 140, options 
      [nop,nop,TS val 4010205241 ecr 3417680035], length 0 
      13:16:18.673909 IP (tos 0x10, ttl 61, id 16921, offset 0, flags [DF], proto TCP (6), length 208
   sudo tcpdump port 80 -vn
    packet capture on a specific port, you can specify src or dest if you want a more specific searches
    -n disables name resolution, and rather shows the number version instead
      sudo tcpdump src port 80 -vn
      sudo tcpdump dst port 80 -vn
   sudo tcpdump 'port 80 || port 22'
   sudo tcpdump "(src net 10.1.0.0/24  && (dst net 10.3.0.0/24 || dst host 10.2.0.3) && (! dst host 10.1.0.3))" -vn
    source network 10.1.0.0/24 and destination network 10.3.0.0/24 or dst host 10.2.0.3 and not host 10.1.0.3
----Berkley Packet Filters (BPF)
  ip[2:2]
    puts us in the ip header at byte offset 2, and a length of 2 bytes (Total Length field)
  ip[9]
    byte offset 9 with a default length of 1 (Protocol)
  tcpdump 'ether[12:2] = 0x0800 && (tcp[2:2] != 22 || tcp[2:2] != 23)'
    within the either header; byte offset 12 spanning 2 bytes, is looking for the ethertype set to ipv4 traffic
    where the tcp byte offset 2, spanning 2 bytes(Destination Port), is not port 22 or is not port 22
  ip[0] & 0x0F > 0x05
    in the ip header byte offset 0, focusing only on the IHL where the IHL is greater than 5
  tcp[13] = 0x11
    in the tcp header byte offset 13, where the only packets flags set are FIN and ACK
  tcp[13] & 0x11 = 0x11
    in the tcp header byte offset 13, where any packets with both flags FIN and ACK are on 
  tcp[13] & 0x11 !=0
    in the tcp header byte offset 13, where any packets with either the flag FIN or ACK are on

