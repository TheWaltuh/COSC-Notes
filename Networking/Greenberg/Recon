Active - process of transmitting packets to remote hosts and analyzing replies to identify devices
  Netowrk Scanning
    Remote to Local
      outside of a specific network performing some sort of scan oh internal hosts
    Local to Remote
      a host within the network scans outside of the network
    Local to Local
      a host scans there internal network
    Remote to Remote
      world wide scanning campaigns
    Approach
      wide range scan
      target specific scan
    Method
      single source scan
      distributed scan
Passive - OCO :: client listens for traffic from the target -- DCO :: watches the network and looks for irregular traffic
  Identifying
    IP-Addresses
    People and Technologies
    Content of Interest
    Vulnerabilitis
    External Sites
  Tools
    WHOIS
    Phone Numbers
    Job Listing
    Fingerprinting
Internal - within the network
External - outside you network
  Passive
    DNS :: hotnames to Ip addresses
    DIG :: between primary and secondary DNS servers
    ZONE TRANSFERS :: DNS information
    HOST HISTORY :: netcraft
    GOOGLE SEARCHES :: subdomains and technologies
    SHODAN :: information about techonolgy, services, network infrastructure
https://git.cybbh.space/net/public/raw/master/modules/networking/slides/images/Recon2.png

:::: PASSIVE EXTERNAL DEMO ::::
  whois google
  dig ccboe.net
    dig ccboe.net MX ## Looks for the Mail Server
    dig ccboe.net SOA ## Looks for the Source of Authority Server
    dig ccboe.net TXT ## Text files, or some sort of text (could be in base 64)
    dig ccboe.net NS ## Gets the name servers for the website
    dig ccboe.net A ## IPv4
    dig ccboe.net AAAA ## IPv6
    dig ccboe.net CNAME ## Gets the Canonical Name record
  dig axfr @nsztm1.digi.ninja zonetransfer.me
  dig axfr @<name server> <website>
  
:::: NETWORK SCANNING DEMO ::::
  nmap -Pn <IPADDRESS> or <IPSUBNET>  ## -P turns of ping sweep :: -n no name resolution
    nmap -Pn <IPADDRESS> or <IPSUBNET> -p 21-23,80 -T4 | egrep -i "open|Nmap scan" ## Quick Port Scan
  nc -zv <IPADDRESS> <PORT> or <SERVICENAME> ## -z port scanning :: -v verbose :: -vv more verbose
    nc -vznw1 <IPADDRESS> 1-1023 ## quick scan to see if ports are open
    nc <IPADDRESS> 80
      GET /
    nc <IPADDRESS> 23 ## is a bunch of gibberish
netstat -nltp ## Local Port Scanning
ip a ## local ip addresses

NET RECON METHODOLOGY
1. Host Discovery (nmap, scan.sh, nc, ping sweep, traceroute)
2. Port Discovery (nmap, scan.sh, nc)
3. Port Validation (Banner Grabbing - nc)
4. Follow-On Actions (Based on the ports found)
  IF port is 21 or 80 :: wget -r ftp://<IPADDRESS> \\ wget -r <IPADDRESS>
  IF port is 22 or 23 :: connect to it and do PASSIVE RECON

SCAN METHODOLOGY
1. Quick Scan Ports: 21-23 and 80
2. Specific Ports Based on Hints/Clues found :: to look at images eog :: eom

PASSIVE RECON METHODOLOGY
1. Hostname :: hostname \\ uname -a
2. Interface and Subnets :: ip a \\ ifconfig
3. Neighbors :: arp -a \\ ip neigh | egrep -iv "fail" \\ ip route
4. Files of Interest (pcaps, flags, etc.) :: find
5. Other Ports Listening :: sudo netstat -tulpn | grep LISTEN \\ ss -nltp
6. Available Tools (tcpdump, wireshark, nmap, telnet, wget, curl)
  We may also have to sniff for additional creds in the clear (use tcpdump to sniff for telnet traffic)
