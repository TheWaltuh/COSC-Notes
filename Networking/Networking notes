http://networking-ctfd-1.server.vta:8000/

Command: ssh student@10.50.38.237 -X
Password: password

The map of the environment has been provided in your home directory:
    student_net_range_blue_only.png

All activity PCAPS are provided here:
    /home/activity_resources/pcaps 

[USEFUL COMMANDS]

    1. To view your IP address and interface information:
        a. current =        ip address (ip addr)
        b. deprecated =     ifconfig

    2. To view your ARP cache:
        a. current =        ip neighbor (ip nei)
        b. deprecated =     arp -a

    3. To view open TCP and UDP sockets:
        a. current = 
            i. TCP =        ss -antlp
            ii. UDP =       ss -anulp
        b. deprecated =     netstat

    4. To view active processes:
        a. static =         ps -elf
        b. real-time =      top or htop

    5. To open file manager from the command line or X11 connection:
        a. nautilus
        b. pcmanfm

    6. Web Browsers:
        a. Firefox
        b. Chromium
        c. Konqueror

    7. To open images from the command line or X11 connection:
        a. Eye of Gnome =                   eog [file]
        b. Nomacs =                         nomacs [file]
        c. Eye of Mate =                    eom [file]
        d. GNU Image Manipulation Program = gimp [file]

    8. Network scanning:
        a. nmap
            -sT = TCP Full connection
            -sS = TCP SYN scanning
            -Pn = Disable ping sweep
            -sU = UDP scanning
        b. zenmap
        c. netcat
            TCP: nc -nzvw1 10.10.0.40 21-23 80
            UDP: nc -unzvw1 10.10.0.40 53 69
        d. ping
        e. traceroute

    9. Network Utilization:
        a. iftop
        b. iptraf-ng

    10. Packet Manipulation (requires root privileges):
        a. scapy
        b. hping3
        c. yersinia     yersinia -G

    11. Packet Sniffing (requires root privileges):
        a. Wireshark
        b. tcpdump
        c. p0f
        d. tshark

    12. Banner Grabbing:
        a. netcat
            Client: nc 10.10.0.40 22
            Listener: nc -lvp 1234
        b. telnet
            telnet 10.10.0.40
        c. wget
            wget -r http://10.10.0.40
            wget -r ftp://10.10.0.40
        d. curl
            curl http://10.10.0.40
            curl ftp://10.10.0.40

    13. DNS Query:
        a. whois
        b. dig
            Records:
                A - IPv4
                AAAA - IPv6
                NS - Name Server
                SOA - Start of Authority
                MX - Mail Server
                TXT - Human readable message

    14. Remote access:
        a. ssh
            ssh student@10.10.0.40
            ssh student@10.10.0.40 -p 2222
        b. telnet
            telnet 10.10.0.40
            telnet 10.10.0.40 23

    15. File Transfer:
        a. scp
            scp student@10.10.0.40:file .
            scp file student@10.10.0.40:
        b. netcat
            nc 10.10.0.40 1234 < file
            nc -lvp 1234 > file

echo <whatever> | base64 (or md5sum)

------------------------------------[BASIC FUNDEMENTALS]------------------------------------

MATHEMATICS OF NETWORKING - Binary Identification

1		Bit/Flag
4		Nibble
8		Byte/Octet
16		Half Word
32		Word
64		Very Long Word

BASE (N) FORMATS
Common Formats

Base 2 - 01000010 01100001 01110011 01100101 00100000 00110010 	(ones and zero)
Base 10 - 66 97 115 101 32 49 48					(Decimal System)
Base 16 - 42 61 73 65 20 31 36					(Hex)
Base 64 - QmFzZSA2NA==							(Uses Keyboard (ASCII))




---------[Layers]---------

   [PHYSICAL LAYER]
    [OSI LAYER 1]

PHYSICAL LAYER RESPONSIBILITIES
	Hardware Specifications

	Encoding and Signaling

	Data Transmission and Reception

	Physical Network Design

   [DATA LINK LAYER]
     [OSI LAYER 2]

DATA LINK SUB-LAYERS
	MAC (Media Access Control)

	LLC (Logical Link Control)



   [NETWORK LAYER]
    [OSI LAYER 3]

IPV4 HEADERS
_________________________________________________________________________________________________
Offset Size|0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31
byte | bit |       0       |         1           |           2           |           3    
  0  |  0  |Version|  IHL  |      DSCP     | ECN |                  Total Length
  4  | 32  |            Identicication           |  Flags |            Fragment Offset
  8  | 64  |  Time to Live |       Protocol      |               Header Checksum
 12  | 96  |                             Source IP Address
 16  | 128 |                           Destination IP Address
 20  | 160 |                            Options (if IHL > 5)					    
-------------------------------------------------------------------------------------------------

IPV6 HEADERS
_________________________________________________________________________________________________
Offset Size|0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31
byte | bit |       0       |         1           |           2           |           3    
  0  |  0  |Version|  Traffic Class  |                        Flow Label
  4  | 32  |____________Payload Length___________|______Next Header______|_______Hop Limit_______
  8  | 64  |
 12  | 96  |                             Source IPv6 Address
 16  | 128 |                           
 20  | 160 |_____________________________________________________________________________________
 24  | 192 |
 28  | 224 |
 32  | 256 |                           Destination IPv6 Address
 36  | 320 |
-------------------------------------------------------------------------------------------------

ICMP HEADER
_________________________________________________________________________________________________
Offset Size|0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31
byte | bit |       0       |         1           |           2           |           3    
  0  |  0  |      Type     |        Code         |                   Checksum
  4  | 32  |                      ICMP Specific Message (variable Length)
-------------------------------------------------------------------------------------------------


FRAGMENT PROCESS
RES|DF|MF|Offset
 0 | 0| 0|   0

first packet will have a more fragment flag but no offset (offset = 0)
MF|Offset
1 | 0

Every packet after will have a MF flag of 1 and a offset thaty continues to increment
MF|Offset
1 | 185 
1 | 370 ...

offset increment is the amount of data you can send through each packet
last packet will have MF of 0  to indicate no more packets and greatest offset of all the packets
MF|Offset
0 | 1850

Packets will be put together for least to greatest based on offset

FINGERPRINTING
	Vendors have chosen different values for TTL which can provide insight to which OS 
	family a generated packet is from.

ZERO CONFIGURATION
IPv4 Auto Configuration

* APIPA

* RFC 3927


IPv6 auto configuration

* SLAAC (StateLess Address Auto-configuration)

* RFC 4862

   [TRANSPORT LAYER]
     [OSI LAYER 4]

TCP FLAGS
 ________________________________
|128| 64| 32| 16| 8 | 4 | 2 | 1 |
|-------------------------------|
|CWR|ECE|URG|ACK|PSG|RST|SYN|FIN| 
|_______________________________|

TCP Flag Breakout (Binary and Hex)

Collection of Exceptionally Unskilled Attackers Pester Real Security Folks

Coach Explained to the University of Alaska to Play Really Snowy Football



   [SESSION LAYER]
    [OSI LAYER 5]

PROTOCOLS
* SOCKS
	SOCKS 4/5 (TCP 1080):
	Uses various Client / Server exchange messages
		Client can provide authentication to server
		Client can request connections from server
* NetBIOS

* PPTP/L2TP

* RPC
	RPC (ANY PORT) - RPC is a request/response protocol
	User application will:
		Sends a request for information to a external server
		Receives the information from the external server
		Display collected data to User
   [Presentation LAYER]
      [OSI LAYER 6]

RESPONSIBILITIES
* Translation

* Formating

* Encoding (ASCII, EBCDIC, HEX, BASE64)

* Encryption (Symmetric or Asymmetric)

Compression

   [APPLICATION LAYER]
      [OSI LAYER 7]



-----[NETWORK TRAFFIC SNIFFING]-----

CAPTURE LIBRARY
What makes traffic capture possible?
	Libpcap
	WinPcap
	NPCAP

---[WIRESHARK, TSHARK, TCPDUMP AND BPFS]---

BERKELEY PACKET FILTERS (BPF)

* Requests a SOCK_RAW socket and setsockopt calls SO_ATTACH_FILTER

sock = socket(PF_PACKET, SOCK_RAW, htons(ETH_P_ALL))
...
setsockopt(sock, SOL_SOCKET, SO_ATTACH_FILTER, ...)



-----[LAYER 2 SWITCHING TECHNOLOGIES]-----
SWITCH OPERATION
* Fast Forward - Only Destination MAC
* Fragment Free - First 64 bytes
* Store and Forward - Entire Frame and FCS

CAM TABLE
* Learn - Examining the Source MAC Address
* Forward - Examining the Destination MAC Address

IEEE 802.1AD "Q-IN-Q"
0x88A8 - Standard Double Tag
0x9100 - Non-Standard Double Tag

SPANNING TREE PROTOCOL (STP)
   Root decision process
1. Elect root Bridge
2. Identify the Root ports on non-root bridge
3. Identify the Designated port for each segment
4. Set alternate ports to blocking state

LAYER 2 DISCOVERY PROTOCOLS
* Cisco Discovery Protocol (CDP)
* Foundry Discovery Protocol (FDP)
* Link Layer Discovery Protocol(LLDP)

DTP (DYNAMIC TRUNKING PROTOCOL)
Trunking - Encodes, then sends to other side through "Trunk", then decodes and sends to 
	   approprate VLANs

VTP (VLAN TRUNKING PROTOCOL)

    ------------VTP Server-----------
    |               |               | 
VTP Client      VTP Client      VTP Client

PORT SECURITY
   Modes

* shutdown

* restrict

* protect



Supernet --> Network --> Subnet
Supernet - lumping multiple larger networks
Networks - can have multiple subnets
Subnets  - a section of IP's in a network

LOOKUP PROCESS
Router looks and finds the longest match, if it matches it sends
      (Longer the match, the high the priority)

             Routing Protocol                |  	      Routed Protocol
  Used between layer 3 devices to learn and  | Used Between Routers to direct user traffic
advertise Routes and maintain Routing tables |      It is also called network protols


ADMINISTRATIVE DISTANCE
the lower the better

Connected		0
Static			1
EIGRP summary route	5
External BGP		20
Internal EIGRP		90
IGRP			100
OSPF			110
IS-IS			115
RIP			120
External EIGRP		170
Internal BGP		200

METRICS
* Hop
* Bandwidth
* Delay
* Load
* MTU
* Reliability
* Cost
* Policy

STATIC ROUTING ADVANTAGES AND DISADVANTAGES

        Advantages         |       Disadvantages
   Does not send Updates   |  Time consuming and prone
                           |  to error in configuring
  No bandwidth used and    |  Administrator must intervene 
 minimal system resources  |   during any network outages
Data path is predetermined |  Does not scale well for
                           |  large growing networks

DYNAMIC ROUTING ADVANTAGES AND DISADVANTAGES

        Advantages         |       Disadvantages
  Easier to configure and  |  Consumes Bandwidth and
      maintain netork      |      system resources
  Intervention not needed  |      Updates can be 
   with network outages    |       intercepted
   Scales very well for    |    Data path is not
      large networks       |     pre-determined

BGP
* Road-map of the Internet
* Routes traffic between Autonomous System (AS) Number
* Advertises IP CIDR address blocks
* Establishes Peer relationships
* Complicated configuration
* Complicated and slow path selection

**most bgp's are supernets**

     BGP OPERATION
How BGP chooses the best path:

* Advertise a more specific route. 192.168.1.0 /24 is more specific than 192.168.0.0 /16.
* Offer a shorter route to certain blocks of IP addresses. A route to ip prefix with 4 AS 'hops" 
  is better than route with 5 AS 'hops'

BGP HIJACKING
* Illegitimate advertising of addresses
* BGP propagates false information
* Purpose:
	* stealing prefixes
	* monitoring traffic
	* intercept (and possibly modify) Internet traffic
	* 'black holing' traffic
	* perform MitM

BGP HIJACKING DEFENSE
* IP prefix filtering
* BGP hijacking detection
	* Tracking the change in TTL of incoming packets
	* Increased Round Trip Time (RTT) which increases latency
	* Monitoring misdirected traffic (change in AS path from tools like Looking Glass)
* BGPSec










IP/NFTables - Host Filtering T3 FLAG
T3 Flag:
05e5fb96e2a117e01fc1227f1c4d664c
