xfreerdp /u:student /v:10.50.37.177 +glyph-cache +clipboard +dynamic-resolution
Stack 10
10.50.24.175

Version Information - Get-Host | Select-Object version
Switch Version      - Pwsh  (use exit to leave back to original version)
Switch Back         - exit

####CIM Classes https://learn.microsoft.com/en-us/previous-versions/windows/desktop/wmi_v2/cim-class-overview
Common Informational Model(CIM) are objects designed to control a specific windows subsystem
Windows Management Instrumentation(WMI) are built on CIM Classes
CIM Class is a placeholder while CIM Instance is an occuring event
Get-CimClass                                                                   #Lists all CIM Classes
Get-CimInstance -Namespace <instance> -ClassName <class>                       #lists the class from the instance
Get-CimInstance -ClassName Win32_LogicaLDisk -Filter "DriveType=3"             #Microsoft is transitioning to using CIM classes
Get-WmiObject -Class Win32_LogicalDisk -Filter "DriveType=3"                   #Same Output as the command above


####Execution Policy https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-7.3
Get-ExecitionPolicy -list                                            #Lists all of the Scopes and Execution Policies on the system
Get-ExecutionPolicy                                                  #Gets the current user's Execution Policy
Set-ExecutionPolicy -ExecutionPolicy <see below> -Scope CurrentUser #Sets the ExecutionPolicy of the CurrentUser to one listed
AllSigned     - requires all files be signed by a trusted publishert
Bypass        - anything will run
Default       - restired from windows clients
RemoteSigned  - Requires a dgiital signature from a trusted publisher
Restirected   - permits individual command
Undefined     - 
Unrestricted  -

####PowerShell Profiles
A convenient way to store Powershell Configuration information as well as aliases and functions that you want to be persistent in every PowerShell Session
By default they are not built, the paths are checked with ou open PowerShell
All Users, All Hosts               #The following list boots up in the order listed              
All Users, Current Host            
Current User, All Host             
Current User, Current Hosts        
$PSHome                            #Stores installation directory for PowerShell
$Profile                           #Displays the paths to the profiles that are available in the current session
$profile | get-member -Type Noteproperty
Test-Path -Path $profile                               #Displays the profile values of Names, MemberType, and Paths
Test-Path -Path $profile.currentUserAllHosts
Test-Path -Path $profile.AllUsersAllHosts
Test-Path -Path $profile.AllUserscurrentHost
New-Item -ItemType File -Path $profile -Force          #creates a new profile
New-Alias -Name DemUsers -Value Get-LocalUser          #saves a new-alias in the created profile, anytime the profile gets loaded up it does not need to be redefined

###WQL for WMI for CIM Classes
Get-CimInstance -ClassName win32_product -Filter 'name like "microsoft%"' #What is the %?
EXAMPLE 4: Any characters -- or none (%)

The following commands get processes that have names that begin with
"calc". The % symbol in WQL is equivalent to the asterisk (*) symbol in
regular expressions.

    $query = "Select * from win32_Process where Name LIKE 'calc%'"
    Get-WmiObject -Query $query | Select-Object -Property Name, ProcessID

    Name                               ProcessID
    ----                               ---------
    calc.exe                                4424
WQL is the Windows Management Instrumentation (WMI) query language, which is the language used to get information from WMI.

####Windows Remoting
Get-PSSessionConfiguration    #Gets the registered session configurations on the computer.
Session Configurations        #determine the users who can connect to the computer remotely and the commands they can run.
Enable-PSRemoting             #configures the computer to receive PowerShell remote commands that are sent
Invoke-Command                #runs commands on a local or remote computer and returns all output from the commands, including errors

####Name-Spaces
([System.Text.Encoding]::GetBytes)

####OP Notes
##Unzipping a file multiple times
function unzip{
$count=0
$file=1000
Do{
   Expand-Archive -Path "Omega$file.zip" -DestinationPath C:\Users\CTF\Documents -Force
   $count+=1
   $file-=1 
}Until($count -eq 1000)
}
