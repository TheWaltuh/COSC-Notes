####Windows Auditing and Logging

 C:\Windows\Temp\$I2J5144.txt
##Windows Artifacts 

#What is an Artifact?
objects or areas within a computer system that contain important information relevant to the activities performed on the system by the user
Sans Windows Artifact Analysis
Forensically Relevant Registry Locations
many artifacts will require the use of a Security Identifier (SID) in order to dig into the specific registry locations
Get-LocalUser | Select-Object Name,SID
will show local users
Get-WMIObject win32_useraccount | Select-Object name,sid
will show local and domain users
CMD: mic UserAccount get name,sid
will show local users

#UserAssist
tracks the GUI-based programs that were ran by a particular user
HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\UserAssist\{GUID}\Count\
GUID
CEBFF5CD …
 	applications, files, links, and other objects that have been accessed
F4E57C4B …
  shortcut links used to start programs
reg query "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\UserAssist\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\Count"

**WorkStation 2 is 1803 and below**
**net use * http://live.sysinternals.com**
#Windows Background Activity Moderator (BAM)
controls activity of background applications
only after windows 10 version 1709
Get-ComputerInfo | Select-Object osname,osversion,OsHardwareAbstrationLayer
CMD: systeminfo
full path of an executable
last execution date/time
1809 and newer (Windows 10.0.17763)
HKLM\System\CurrentControlSet\Services\bam\State\UserSettings
1803 and below (Windows 10.0.17134)
HKLM\System\CurrentControlSet\Services\bam\UserSettings
Get-Item HKLM:\System\CurrentControlSet\Services\bam\UserSettings\*

#Recycle Bin
when a user deletes a file
Get-Childitem ‘C:\Recycle.bin’ -recurse -verbose -force | Select-Object FullName
SID - which user deleted it
which useraccount where ‘sid=“<sid>”’ get name
TimeStamp - when it was deleted
$RXXXXXX - contents
$IXXXXXX - original path and name

#Prefetch
when an application is run from a specific location for the first time
application
hash noting the location
.PF extension
C:\Windows\Prefetch
limited to 1024 files one win8-10 and 128 files on win7
Get-ChildItem -Path 'C:\Windows\Prefetch\' -ErrorAction Continue | Select-Object -First 8

#Jump Lists
allows users to use apps quickly that they frequently use
First time of execution 
Creation Time
Last time of execution
Modification Time
C:\Users\<username>\Appdata\Romaing\Microsoft\Windows\Recent\AutomaticDestinations
Get-ChildItem -Recurse C:\Users\*\AppData\Roaming\Microsoft\Windows\Recent -ErrorAction Continue | Select-Object Name, LastAccessTime 
Get-ChildItem C:\Users\student\AppData\Roaming\Microsoft\Windows\Recent\AutomaticDestinations\ | % {Z:\strings.exe -accepteula $_} >> C:\recentdocs.txt

#Recent Files
last files and folder opened
last 150 files or folders opened
entry and modification time are last time and location the last file was opened
HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs
Get-Item 'Registry::\HKEY_USERS\*\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.*'
[System.Text.Encoding]::Unicode.GetString((Get-ItemProperty "Registry::\HKEY_USERS\*\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.txt")."<propertyNumber>")

#Browser Artifacts
records number of time a site is visited per user
C:\Users\<username>\AppData\Local\Google\Chrome\UserData\Default\History
Z:\strings.exe 'C:\Users\andy.dwyer\AppData\Local\Google\Chrome\User Data\Default\History' -accepteula
Z:\strings.exe 'C:\Users\andy.dwyer\AppData\Local\Google\Chrome\User Data\Default\Login Data' -accepteula
Z:\strings.exe 'C:\Users\andy.dwyer\AppData\Local\Google\Chrome\User Data\Default\Top Sites' -accepteula

$History = (Get-Content 'C:\users\student\AppData\Local\Google\Chrome\User Data\Default\History') -replace "[^a-zA-Z0-9\.\:\/]",""
$History | Select-String -Pattern "(https|http):\/\/[a-zA-Z_0-9]+\.\w+[\.]?\w+" -AllMatches|foreach {$_.Matches.Groups[0].Value}| ft

##Auditing
a way of tracking what events get logged on the system
event viewer in the GUI (Security)
auditpol /get /category:*
auditpol /get /subcategory:"System Integrity"


##Event Logs
records of events that happen on the computer
*.evtx
Get-Eventlog
Get-WinEvent
CMD: we tu til
auditpol /get /category:"Object Access"
(Get-WinEvent -ListLog *).count

#Application Logs
Contain events logged by applications
wevtutil gli application
Get-EventLog -LogName Application -Newest 10

#Security Logs
valid/invalid logon attempts, creating and deleting files, etc.
wevtutil gli security
Get-EventLog -LogName Security -Newest 3 | Format-Table -wrap
Get-WinEvent -ListLog * | findstr /i "Security"
 Get-Winevent -FilterHashtable @{logname='Security';id='4624'} | ft -Wrap

#System Logs
driver failures or other system components to load during startup
wevtutil gli system
Get-EventLog -LogName System -Newest 10
Get-WinEvent -ListLog * | findstr /i "System"

Account Lockouts: 4740

User Added to Privileged Group: 4728, 4732, 4756
Security-Enabled group Modification: 4735
Successful User Account Login: 4624
Failed User Account Login: 4625
Account Login with Explicit Credentials: 4648
Event Log was Cleared: 104
Audit Log was Cleared: 1102
System audit policy was changed: 4719
PS Module Logging (Command Execution): 4103
PS Script-Block Logging (Script Execution): 4104,4105,4106


##History
Get-Content "C:\users\$env:username\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt"

##Script Block Logging
records the content of all script blocks that it processes
reg add HKLM\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging\ /v EnableScriptBlockLogging /t REG_DWORD /d 1 /f
4103 is Verbose powershell command execution enabled
4104 show the actual scripts ran, encoded/decoded versions 
4105 a script started 
4106 a script ended 
