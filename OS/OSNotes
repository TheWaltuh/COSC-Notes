https://learn.microsoft.com/en-us/docs/

registrys
https://learn.microsoft.com/en-us/search/?terms=registry

execution policies
https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-7.3

Get-ExecutionPolicy -list


****SCHEDULE TASK CAN BE USED FOR PRESISTENCE****
****CRON JOB TASK CAN BE USED FOR PRESISTENCE****
****SERVICES CAN BE USED FOR PERSISTENCE****
****if theres a profile, adversarys can use it for persistence****



-----[PROFILES]-----

When system starts up, profiles run
when powershell starts up, it reads the profiles

PowerShell Profiles

	All Users, All Hosts
	All Users, Current Host
	Current User, All Hosts
	Current User, Current Host
	
	$Profile | Get-Member -Membertype NoteProperty | Format-List
	$Home
	$PSHome
	
	Test-Path -Path $profile.AllUsersAllHosts
	Test-Path -Path $profile.AllUsersCurrentHost
	Test-Path -Path $profile.CurrentUserAllHost
	Test-Path -Path $profile.CurrentUserCurrentHost
	
	
	
	New-Item -Path $profile.CurrentUserAllHosts -Type File -Force
ISE Profiles
	Current User, Current Host
	All Users, Current Host


[System.Text.Encoding]::GetBytes()


(New-Object System.Net.WebClient).DownloadFile($url,$output)



10.50.21.155
13

(Get-Process -name chrome).Kill()




$count = 0
$file = 1000


while($count -lt 1000){
Expand-Archive -Path .\Omega$file.zip -DestinationPath C:\User\andy.dwyer -Force
$count = $count + 1
$file = $file - 1
}


-----[REGISTRY]-----

--[MANIPULATING REGISTRIES]--

regedit.exe
	GUI
	Located at "C:\Windows\regedit.exe"
reg.exe
	CLI
	Located at "C:\Windows\System32\reg.exe"
	Minimum commands to know
		Reg add, reg querry, reg delete, reg copy, reg save


Get-LocalUser | select name, sid
	gets users name and sid of all the users in the registry

PowerShell
	Root Hive Keys loaded as powershell drives
	Commands used
query registry -->	Get-item(can use on run), get-itemproperty, get-childitem(cant use on run)
set registry   -->	set-itemproperty, new-item, new-itemproperty	

get-childitem - reads sub keys
get-item - read key values
get-itemproperty - gets key properties
new-item - get new key
new-itemproperty - establish properties for the key

If something's in the run key, thats how the adversery sets persistence


Get-PSDrives
New-PSDrive -Name FileServer -PSProvider FileSystem -Root "\\file-server\warrior share"
cd FileServer:
PS FileServer:\> ls


    Directory: \\file-server\warrior share


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
d-----         2/23/2022   9:56 PM                1st Battalion
d-----         2/23/2022   9:56 PM                2nd Battalion
d-----         2/23/2022   9:56 PM                3rd Battalion
d-----         2/23/2022   9:56 PM                Brigade HQ



--[ALTERNATE DATA STREAM]--


Set-Content .\coffee.txt -Value "SSN is 103259262" -Stream secret.info
Get-Item .\coffee.txt -Stream *

PSPath        : Microsoft.PowerShell.Core\FileSystem::C:\Users\andy.dwyer\Desktop\coffee.txt::$DATA
PSParentPath  : Microsoft.PowerShell.Core\FileSystem::C:\Users\andy.dwyer\Desktop
PSChildName   : coffee.txt::$DATA
PSDrive       : C
PSProvider    : Microsoft.PowerShell.Core\FileSystem
PSIsContainer : False
FileName      : C:\Users\andy.dwyer\Desktop\coffee.txt
Stream        : :$DATA
Length        : 50

PSPath        : Microsoft.PowerShell.Core\FileSystem::C:\Users\andy.dwyer\Desktop\coffee.txt:secret.info
PSParentPath  : Microsoft.PowerShell.Core\FileSystem::C:\Users\andy.dwyer\Desktop
PSChildName   : coffee.txt:secret.info
PSDrive       : C
PSProvider    : Microsoft.PowerShell.Core\FileSystem
PSIsContainer : False
FileName      : C:\Users\andy.dwyer\Desktop\coffee.txt
Stream        : secret.info
Length        : 18

Get-Content .\coffee.txt -Stream secret.info
SSN is 103259262

changing the content of the alternate data stream does not change the hash of the file, only the 
main one
cannot be disabled
[filename.extension]:[alternate_stream_name]::$DATA




-----[LINUX]-----

ip a - basically ifconfig

arp, ip neigh - finds ips of boxes connected to ours

su - switching to the super user (root)
sudo - running a command as the super user (root)

sudo -u <user> <command> - runs command as specified user
su -c <command> <user> - same as above but password is required
sudo !! - allows you to repeat any command u last typed

xxd nano - allows you to read an executable

apropos <word> - search for word in help

file - tells you what time of file it is (IE ASCII text)

wc - word count

which - finds file path

/usr/bin - were user binary's are
/sbin - were system binary's are
/boot - contains info for boot process
/boot/grup - all the commands for the boot processes are located here
/dev - contains device files
/media - removable media device files
/etc - every thing configurable
/home - contains all users home directories
/lib - local repository
/mnt - contains mounted partitions on the drive
/opt - optional programs
/root - root's home directory
/proc - contains all linux process id's (top pulls from this file)
/var - contains variables
/var/log - contains default logs
/var/spool - spool - a roll of task that need to be done
/etc/group - shows everyone and the group they belong too

chmod 460 <file>
chmod u=r,g=rw,o=-rx <file>
chown <user>:<group> <file>

find / -perm 4000 2> /dev/null - user perm sticky bit (sid)
find / -perm 2000 2> /dev/null - group perm sticky bit (sgid) 
find / -perm 1000 2> /dev/null - other (any) perm sticky bit (turns into a t) (only person who can 
									delete the file is the owner)


-----[WINDOWS BOOT PROCESS]-----

When you have a BIOS, it uses the Master Boot Record and Windows boot manager
UEFI uses UEFI boot manager (bootmgrfw.efi)

NTOSKRNL.EXE - Kernel and Windows Executive
------->SMSS.EXE(0) - Master Session Manager
	|	set enviroment variables
	|	sets c:\Pagefile.sys
	|	loads WIN32K.SYS for the sub system
	|------>CSRSS.EXE(0) - Windows Sub System Process / WIN API
	|		[USER MODE]
	|		Kernel32.dll
	|		User32.dll
	|		GDI32.dll
	|		ADVAPI32.dll
	|		KernelBase.dll
	|		[KERNEL MODE]
	|		WIN32K.SYS - Kernel Mode
	|		Conhost.exe - Increased security for Console (CLI) applications
	|------>WININIT.EXE(0) - Windows Initialization Process
	|	|------>SERVICES.EXE(0) - Service Control Manager (SCM)
	|	|	|------>Starts all services with a start value of (0x2) automatic
	|	|------>LSASS.EXE(0) - Local Security Authority Sub System (LSA)
	|			Authentication Packages
	|------>SMSS.EXE(1)
		|------>CSRSS.EXE(1)
		|		All Dependencies
		|------>Winlogon.exe(1)
				X LogonUI.exe
				X Userinit.exe
				|------>Explorer.exe
*X indicates process exits*

CSRSS.EXE(0) - for high privilage services
CSRSS.EXE(1) - for user stuff
Session 0 - non-interactive
Session 1 - interactive user login

BIOS --> Boot Loader --> Boot files --> Kernel loading --> Starting services --> Checking SAM by LSA





--[BCDEDIT]--
bcdedit /set {bootmgr} description "Del Taco"
	change description to Del Taco
bcdedit /export C:\boot_bk
	save a copy of the current bootloader
bcdedit /import C:\boot_bk
	import a saved copy of the bootloader incase you mess up the current one
bcdedit /create /{ntldr} /d "Windows XP Pro SP2 - Tigar Paw"
	creates new {ntldr} entry
	/d is for description
bcdedit /set {ntldr} device partition=C:
	sets partition C to {ntldr} entry
bcdedit /displayorder {ntldr} /addfirst
	adds to boot list
bcdedit /delete {ntldr} /f
	deletes the {ntldr] OS loader
	/f is force
bcdedit /set {default} safeboot minimal
	sets safeboot on
bcdedit /deletevalue {current} safeboot
	deletes the value safeboot


-----[LINUX BOOT PROCESS]-----

BIG MIKE GOT KILLED IN RUSSIA
BIOS - Basic Input Output System - Exectues MBR
MBR - Master Boot Record - Executes Grub
GRUB - Grand Unified Bootloader - Executes Kernel
Kernel - Executes /sbin/init
Init - (SysV or SystemD) - executes runlevel programs
Runlevels - executed from /etc/rc*.d

--[BIOS]--
BIOS is the first program to run on startup (Flash or ROM)
If stored in flash memory it becomes a target for BIOS Rootkits
Perform POST - Power On Self Test
Perfroms system integrity checks
Builds a device tree
Reads and executes the first sector of the boot disk (MBR) to lead bootloader to memory

--[MBR]--
MBR usually located at /dev/hda or /dev/sda (/dev/vda)
contains info about grub
related commands:
du - disk usage: summarize disk usage of the set of FILEs
df - disk free: displays the amount of disk space available on the file system
lsblk - list info about all available or specified block devices
xxd -l 512 -g 1 /dev/vda
sudo dd if=/dev/vda of=MBRCopy bs=512 count=1  --> if=infile of=outfile bs=BitSize
dd if=mbroken bs=1 skip=446 count=16 --> gets first partition
dd if=mbroken bs=1 count=446 --> gets bootstrap section

446 bytes- Boot loader
64 bytes- Partition table - 4 partitions - 16 bytes each
2 bytes - Magic Number

--[GRUB]--
Dynamically configurable with the capability to make changes during boot
Config File - /boot/grub/menu.lst
Altering boot entries, selecting different kernels, and modifying the initial RAM disk (initrd)
OS Selection screen where if no choice is made, default kernel specified in the grub configuration file
Bootloader (GRUB) passes text based kernel parameters
Kernel options are sometimes configurable at the menu with the ‘e’ key
stages - 1, 1.5 and 2

--[KERNEL]--
Uncompresses itself into RAM
Establishes memory management, detects CPU type, page tables
Mounts the root ‘/ ’ filesystem
kernel is process 0 [kthreadd] <-- process name
Executes /sbin/init or systemd daemon - very first process started by the kernel with a process ID of 1
Name of the PID is going to be in []
‘ls -l /sbin/init’ to determine which Init system you are using
garviel@terra is a systemd system ^
bombadil@mines-tirith is a /sbin/init  SysV

--[INIT]--
[SYSV]
Configures the environment for the system
Available run levels 0 - 6
Identifies the default 'init' run level from /etc/inittab and uses that to load all the right programs
The entire startup process is handled by scripts --> /etc/init.d/
^ Scripts that run ‘S’tart and ‘K’ill scripts out of applicable rc folders
inittab line descriptions (rc = run commands)
All lines in inittab take the following form, with four fields separated by colons in this order
A unique identifier (a short string, such as id)
The applicable runlevel number(s)
The action that init should take
A runlevel is a software configuration where only a select group of processes exist

0 - halt (Do NOT set initdefault to this)

1 - Single user mode (switched from multi-user)

2 - Multiuser, without networking

3 - Full multiuser mode, with networking

4 - unused

5 - X11 (GUI)

6 - reboot (Do NOT set initdefault to this)

If running something other than an init.d service, then probably malicious

‘ls -l /etc/rc<1-6>.d’ to see different services run in each runlevel
service <service name> start | stop | restart | status | reload | …​
service --status-all

[SYSTEMD]
Loads system in parallel and from binaries
Instead of runlevels, uses 'targets' that point to other dependencies based on the features of the 
environment desired
‘default.target’ is essentially the default runlevel
Use ‘systemctl get-default’ to find it, and ‘systemctl set-default’ to change it.
‘systemctl list-dependencies’ shows all the services running under default.target
Uses 'systemctl’ to manage system
Config: /etc/systemd/ and /etc/systemd/system

/lib/systemd/system 'ls -l | grep -v wants | grep run'
list-unsystemctl status <application>.service
systemctlits
systemctl get-default
systemctl set-default
systemctl list-dependencies
systemctl list-dependencies graphical.target
systemctl cat graphical.target

--[PARTITIONS]--
BLOCK DEVICE (Physical or Virtual) >> Partition Table >> Logical Partition >> Filesystem (ext3,ext4,FAT)
Hard disks, USBs, or anything with storage space must have at least one partition in order to be used
Multiple partitions can exist on a single storage device
You can format each partition with a different file system
A partition is the logical segmentation of a single storage device into multiple usable sections
Two main types of HD Partitioning:
	MBR - Master Boot Record
	GPT - GUID (Globally Unique Identifiers) Partition Table


-----[WINDOWS PROCESS VALIDITY]-----

Q: What is process validity
	making sure a process is valid
Q: Why is process validity important
	make sure an adversary isnt in the system
Q: What are some Abnormal things we could see in a process list?
	improper spelling and PID's
Q: How do we discover Normal, abnormal, and Hidden Processes and Services?
	Get-Process SMSS,CSRSS,LSASS | Sort -Property Id
Q: Do boot processes have descriptions?
	Get-Process | Select Name, Id, Description | Sort -Property Id
Q: Where do the system processes and services normally run from? (C:\Windows\System32)
	Get-Process | Select Name, Id, Path
	Get-Ciminstance Win32_service | Select Name, Processid, Pathname
Q: Are Priority Levels of processes important?
	Get-Process | Select Name, Priorityclass
	Tasklist /m
	Tasklist /m /fi "IMAGENAME eq chrome.exe"
	Tasklist /fo:list
	tasklist /svc
Q: What are some additional ways that Malware hides?
	in .dll
Q: How would malware use Schedule Task?
	schtasks.exe
	schtasks /query | more
	Get-ScheduledTask | Select * | Select -First 5
	Get-ScheduledTask | ft -wr
Q: What are some Registry keys that can be used for autoruns?
	HKLM\Software\Microsoft\Windows\CurrentVersion\Run
	HKLM\Software\Microsoft\Windows\CurrentVersion\RunOnce
Q: What information are we looking for?
	Wild PID and port numbers, things running out of the wrong directory



netstat -anob
Get-CimInstance Win32_Service | select name,processid,pathname
Get-Service | Where-Object {$_.Status -eq "Running"} | ft -wr
get-process chrome | foreach {$a} {$_.modules} | more


-----[USER ACCOUNT CONTROL]-----
UAC limits the privileges of user run applications, even when run as Administrator, to prevent the 
modification of system files, resources, or settings
Requesting elevated privileges requires explicit, interactive acknowledgement from the user.
Registry key is located at "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"

Red - Application or publisher blocked by group policy

Blue & gold - Administrative application

Blue - Trusted and Authenticode signed application

Yellow - Unsigned or signed but not trusted application


asInvoker - The application will run with the same permissions as the process that started it. The 
application can be elevated to a higher permission level by selecting Run as Administrator

requireAdministrator - The application will run with administrator permissions.. The user who starts 
the application must be a member of the Administrators group. If the opening process is not running 
with administrative permissions, the system will prompt for credentials.

highestAvailable - The application will run with the highest permission level that it can. If the user 
who starts the application is a member of the Administrators group, this option is the same as 
requireAdministrator. If the highest available permission level is higher than the level of the opening 
process, the system will prompt for credentials
	Some Windows executables can "auto elevate" without a prompt.

Does the file/binary/executable meet these conditions?
	Auto Elvate is True
		./strings C:\Windows\System32\*.exe -accepteula | select-string -SimpleMatch 
		"autoelevate"
	Digitally Signed
		./sigcheck -m C:\Windows\System32\slui.exe -accepteula | Select-String -SimpleMatch 
		"level"
	Trusted Directory
		i.e C:\Windows\System32

What are the different perspectives?
	OCO
		"Can I elevate privileges/access to a system and/or run commands/binaries with the UAC 
		prompt giving me away?"
	DCO
		"What artifacts/areas should I focus on for evidence of tampering, unauthorized access, 
		or file execution?"
	SysAdmin
		"How do I harden/secure against vulnerabilities/exploits for UAC prompt?"


UIPI was implemented, starting with Windows Vista:
UIPI is part of UAC, and is designed to protect against shatter attacks.
	In UIPI, each process is given a privilege level.
	Higher integrity level processes can send messages to lower integrity level processes.
	Lower can only receive messages from higher.
	UIPI can be bypassed by signed and trusted applications with the UIaccess manifest setting.




-----[WINDOWS SYSINTERNAL TOOLS]-----
.\Procmon.exe -accepteula #Advanced monitoring tool for Windows that shows real-time File System, 
Registry and Process/Thread activity
	Create a capture
	Filter for Data

.\Autoruns.exe #Shows applications automatically started on boot as well as the Registry 
and file system locations for auto-start configurations
	Allows users to jump to Registry locations
	Allows for viewing of Scheduled Tasks, Services and Image Hijacks

.\procexp.exe #A task manager and system monitor which collects information on running processes
	Shows processes in a tree format and color codes process types
	Allows for suspending and killing processes
	Can replace Windows Task Manger

.\tcpview.exe #A Windows program that will show you detailed listings of all TCP and UDP endpoints on 
your system
	A Graphical (GUI) representation of the NETSTAT command with dynamic updates
	Allows for sorting data by columns
	Shows network connections that are stopping and starting in different colors

.\PsExec.exe -accepteula -s //file-server cmd.exe

.\PsLoggedon.exe -accepteula #Shows users currently logged onto a system
	Can export data to a file
	Can run against a list of machines

.\logonsessions.exe -accepteula #loggonsessions shows how that user logged on
	List sessions and processes running under each user

.\pslist.exe -accepteula #A command line tool for gathering process information
	Can refresh the tool for a specified period of time
	Can be run against multiple machines

.\psinfo.exe -accepteula #A command-line tool that gathers key information about the local or remote 
Windows system
	includes the type of installation, kernel build, registered organization and owner, number of 
	processors and their type, amount of physical memory, the install date of the system, and if its 
	a trial version, the expiration date

.\handle.exe -accepteula #Displays open file references
	Can be used to determine what a suspicious process is doing based on the dll files the process 
	has a handle to
	Can be used to terminate a handle to a file


-----[LINUX PROCESS VALIDITY]-----
--[STARTUP PROCESS SYSV]--
There are two primary processes after startup:
	For kernel-space processes [kthreadd] ( PID = 2 )
	For user-space processes /sbin/init ( PID = 1 )
All kernel processes are fork()ed from [kthreadd] and all user processes are fork()ed from /
sbin/init or direct ancestor.
Kernel processes are typically used to manage hardware, are directly handled by the kernel,have 
their own memory space, and have a high priority.
They can be identified by the name enclosed in square brackets [] (using the -f option with ps).
kthreadd spawned processes will have a PPID of 2.
The kernel starts /sbin/init which is the parent/grandparent of all user processes.

--[KERNEL VS USER SPACE]--
The kernel processes run in its own memory space. User processes run in a separate memory 
space. Code running in kernel mode has unrestricted access to the processor and main memory. 
This is a powerful but dangerous privilege that allows a kernel process to easily crash the 
entire system. The area that only the kernel can access is called kernel space

User mode, in comparison, restricts access to a (usually quite small) subset of memory and safe 
CPU operations. User space refers to the parts of main memory that the user processes can 
access. If a process makes a mistake and crashes, the consequences are limited and can be 
cleaned up by the kernel. This means that if your web browser crashes, it won’t take down

--[PROCESS OWNERSHIP, EUID, RUID]--
The effective user ID (euid), defines the access rights for a process. A second user ID, the 
real user ID (ruid), indicates who initiated a process
The real user ID defines the user that can interact with the running process—most 
significantly, which user can kill and send signals to a process

Users can only modify / interact with files /process that they own or have been shared with them
A user is an entity that can run processes and own files. Users exist primarily to support 
permissions and boundaries. Every user-space process has a user owner, and processes are said 
to run as the owner. A user may terminate or modify the behavior of its own processes (within 
certain limits), but it cannot interfere with other users’ processes. In addition, users may 
own files and choose whether they share them with other users

--[SYSTEM CALLS]--
A system call is an interaction between a process and the kernel
Two system calls, fork() and exec(), are important to understanding how processes startup:
	fork() When a process calls fork(), the kernel creates a nearly identical copy of the 
	process.
	exec() When a process calls exec(program), the kernel starts program, replacing the 
	current process
shell --> fork() --> shell
		 |--> copy of shell --> exec(ls) --> ls

--[ORPHAN AND ZOMBIE (DEFUNCT) PROCESSES]--
Orphan - Parent process exited, adopted by sbin/init with PPID of 1.
	All daemons are orphans
	disown -a && exit # Close a shell/terminal and force all children to be adopted
Zombie (defunct) - completed process, but still has an entry in the process table, waiting on 
parent to acknowledge or terminate
	Zombie can’t be terminated with kill since it has already finished execution, unless the 
	parent process that spawned it is killed.
	Do not use resources, but do take up an entry of the process table which is a finite 
	resource
	Fork Bomb - denial-of-service attack wherein a process continually replicates itself to 
	deplete available system resources,
	Remedy - ‘ulimit -u 30’ sets the max processes a user can run at 30

--[DAEMONS (SERVICES)]--
Program that runs as a background process (Ex. syslogd, sshd, cron)
All daemons are Orphans, but all orphans are not Daemons
A daemons purpose is to manage/monitor a service: {status, start, restart}
‘man cron’ - to see an example of a daemon that starts during the boot process

Persistence - Daemons are service that should run for duration of system operation, since init 
is parent, would require shutdown for parent to die.
Malicious processes are sometimes orphaned and named to make it look like a daemon process
‘ps --ppid 1 -lf’

--[JOBS CONTROL]--
‘jobs’ - Display List of Jobs running in the background

‘fg’ or ‘bg’ - Push / Pull jobs to / from the foreground / background

‘kill %<job number>’ - Terminate the process by job number

‘[ctrl -z]’ or ‘kill -19’ - stop / suspend the job

‘kill -9 <PID>’ or ‘pkill -9 <process name>’

	Stop Process = SIGSTOP(19) (pause signal, let’s you continue later, does not kill 
	process)
	
	End Process = SIGTERM(15) (termination signal, the right way, the application can 
	intercept this signal and initiate shutdown tasks such as temp file cleanup)
	
	Kill Process = SIGKILL(9) (kill signal, extreme, only use if SIGTERM doesn’t work, won’t 
	initiate shutdown tasks)

--[CRON JOBS]--
cron daemon checks the directories /var/spool/cron, /etc/cron.d and the file /etc/crontab, once 
a minute and executes any commands specified that match the time.
Two types of cron jobs
	System cron jobs
		run as root and rigidly scheduled
		perform system-wide maintenance tasks (Cleaning out /tmp or rotating logs)
		controlled by /etc/crontab

	User cron jobs
		Use 'crontab’ command to create user cron jobs
		stored in /var/spool/cron/crontabs/

/etc/crontab - system cron jobs
/var/spool/cron/crontabs - user cron jobs

crontab -u [user] file’ - sets users crontab file to the contents of listed file

‘crontab -l -u [user]’ - Displays user’s crontab contents

‘crontab -r -u [user]’ - Removes user’s crontab contents

‘crontab -e -u [user]’ - edits user’s crontab contents

crontab jobs run with the permissions of the owner of the crontab file

* * * * * /directory/and/command
| | | | |
| | | | +---- Day of the Week   (range: 0-7, 1 = Monday)
| | | +------ Month of the Year (range: 1-12)
| | +-------- Day of the Month  (range: 1-31)
| +---------- Hour              (range: 0-23)
+------------ Minute            (range: 0-59)

ps -elf - static
ps -elf --forest
ps --ppid 2 -lf
ps --ppid 1 -Nlf
top - live
htop
systemctl status auditd.service
systemcctl list-unit
sudo lsof -c sshd - list open files for sshd (or any / all service)
	mem - memory map file
	u - read write
	r - read
	w - write
	W - wrtie with write block enable on entire file

exe -> /usr/sbin/sshd


sudo ls -l /proc/1400



systemd
/etc/init.d
/lib/systemd/system
/etc/systemd


sudo find <path to directory> -type f -exec grep -H '*.txt' {} \;
grep -r ""


-----[WINDOWS ARTIFIACTS]-----
--[GETTING USER SID]--
Many artifacts will require the operator use a Security Identifer (SID) to dig in user specific 
registry locations to enumerate the artifact information. A few ways to achieve this are 
provided below:

get-wmiobject win32_useraccount | select name,sid (PowerShell)

Get-LocalUser | select Name,SID (PowerShell)

wmic useraccount get name,sid (CMD.EXE ONLY)

--[USERASSIST]--
The UserAssist registry key tracks the GUI-based programs that were ran by a particular user.
View executable Files run:

Get-ItemProperty 'REGISTRY::HKEY_USERS\*\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\UserAssist\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\Count'

View Shortcut files executed:

Get-ItemProperty 
'REGISTRY::HKEY_USERS\*\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\UserAssist\
{F4E57C4B-2036-45F0-A9AB-443BCFE33D9F}\Count'

--[WINDOWS BACKGROUND ACTIVITY MODERATOR (BAM)]--
BAM is a Windows service that Controls activity of background applications.

Get-Itemproperty 'HKLM:\SYSTEM\CurrentControlSet\Services\bam\UserSettings\*' (Windows 1709 & 1803)

Get-Itemproperty 'HKLM:\SYSTEM\CurrentControlSet\Services\bam\state\UserSettings\*' (Windows 1809 and newer)

Get-ChildItem HKLM:\System\CurrentControlSet\Services\bam\State\UserSettings\*

--[RECYCLE BIN]--
The recycle bin is a very important location on a Windows file system to understand. It can 
help you accomplish a forensic investigation.

gci 'C:\$RECYCLE.BIN' -Recurse -Verbose -Force | select *

gci 'C:\$RECYCLE.BIN' -Recurse -Force

gci 'C:\$RECYCLE.BIN' -Recurse -Verbose -Force | select FullName

gci 'C:\RECYCLE.BIN\(SID)' -Recurse -Verbose -Force | select FullName

get-content 'C:\RECYCLE.BIN\(SID)\$R0000.txt' 

--[PREFETCH]--
Prefetch files are created by the windows operating system when an application is run from a 
specific location for the first time.

gci -Path 'C:\Windows\Prefetch' -ErrorAction Continue | select * | select -first 5

--[JUMP LISTS (TASKBAR)]--
The Windows 7-10 taskbar (Jump List) is engineered to allow users to “jump” or access items 
they have frequently or recently used quickly and easily.

gci -Recurse C:\Users\*\AppData\Roaming\Microsoft\Windows\Recent -ErrorAction Continue | select FullName, LastAccessTime

gci -Recurse C:\Users\*\AppData\Roaming\Microsoft\Windows\Recent | %{strings -accepteula $_} >> C:\recentdocs.txt

--[RECENT FILES]--
Registry Key that will track the last files and folders opened and is used to populate data in 
“Recent” menus of the Start menu.

Overall key will track the overall order of the last 150 files or folders opened.

List Files in Recent Docs

gci 'REGISTRY::HKEY_USERS\*\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs'

Convert File Hex to Unicode

[System.Text.Encoding]::Unicode.GetString((gp "REGISTRY::HKEY_USERS\*\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.txt")."0")

Convert all of a users values from HEX to Unicode

Get-Item "REGISTRY::HKEY_USERS\*\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.txt" | select -Expand property | ForEach-Object { [System.Text.Encoding]::Default.GetString((Get-ItemProperty -Path "REGISTRY::HKEY_USERS\*\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs\.txt" -Name $_).$_)}

--[BROWSER ARTIFACTS]--
Stores details for each user account.

History will record the access to the file on the website that was accessed via a link.

.\strings.exe 'C:\Users\<username>\AppData\Local\Google\Chrome\User Data\Default\History'

Find FQDNs in Sqlite Text Files

$History = (Get-Content 'C:\users\<username>\AppData\Local\Google\Chrome\User Data\Default\History') -replace "[^a-zA-Z0-9\.\:\/]",""

$History| Select-String -Pattern "(https|http):\/\/[a-zA-Z_0-9]+\.\w+[\.]?\w+" -AllMatches|foreach {$_.Matches.Groups[0].Value}| ft


-----[WINDOWS AUDITING]-----
--[WINDOWS EVENT LOG]--
What is the functionality of the main logs?
	At startup (or on config changes), LSASS sends the system audit policy to the Security 
	Reference Monitor (SRM).
	When an object is accessed, SRM generates auditing messages and sends them to LSASS.
	LSASS sends the event log messages on to the Event Logger

--[WINDOWS EVENT LOG]--
Application - Contains events logged by applications.

Security - Contains events such as valid/ invalid logon attempts and other events related to 
resource use like creating, opening, or deleting files.

System - Contains events logged by system components, such as driver failures other system 
component to load during startup.

CustomLog - Contains events logged by applications that create a custom log.
Using a custom log enables an application to control the size of the log or attach ACLs for 
security purposes without affecting other applications.

--[CONFIGURE AUDIT POLICY]--
View entire auditpol list
	auditpol /get /category:*
Set File SYstem subcategory to audit
	auditpol /set /subcategory:"File System"
Remove File System subcategory auditing
	auditpol /set /subcategory:"File System" /success:disable
To list the global object access auditing entries set on files or folders:
	auditpol /resourceSACL /type:File /view
To list the global object access auditing entries set on Registry Keys
	auditpol /resourceSACL /type:Key /view

--[VIEW/ ANALYZE EVENT LOGS - GUI]--
eventvwr
	Located in C:\Windows\System32\Winevt folder.
	Locations are configurable.

--[VIEW/ ANALYZE EVENT LOGS - CLI]--
show all logs
	wevtutil el
get log info
	wevtutil gli security
get last 3 events
	wevtutil qe security /c:3 /f:text

--[VIEW/ ANALYZE EVENT LOGS - POWERSHELL]--
View newest 10 System Logs
	Get-EventLog -LogName System -Newest 10
View the entire message field in the Security Log
	Get-Eventlog -LogName Security | ft -wrap
Search logs with mutiple criteria
	get-winevent -FilterHashtable @{logname="security";id="4624"} | select -first 5 | ft -wrap
	get-winevent -FilterHashtable @{logname="security";id="4624"} | ft -wrap

(get-eventlog system).message | ft -wrap | findstr /i "flag"

--[EVENT IDS TO SEARCH FOR MALICIOUS ACTORS]--

------------------------------------------------------------------------------
|	User Added to Privileged Group	|	4728, 4732, 4756	|
------------------------------------------------------------------------------
|	Security-Enabled group Modification	|	4735			|
------------------------------------------------------------------------------
|	Successful/ Failed User Account Login	|	4624, 4625		|
------------------------------------------------------------------------------

--[POWERSHELL TRANSCRIPT]--
Allows the capture of the input and output of Windows PowerShell commands into text-based transcripts.
	Start-Transcript
View Powershell console History
	Get-History
View entire powershell History
	Get-Content "C:\users\$env:username\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt"

--[SCRIPT BLOCK LOGGING]--
Logs detailed processing of commands, script blocks, functions, and scripts to the Microsoft-
Windows-PowerShell/Operational event log.

Logging is enabled through the Turn on PowerShell Script Block Logging Group Policy setting in
	Administrative Templates → Windows Components → Windows PowerShell

Turn on script black logging via the Registry
	reg.exe add HKLM\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging\ /v EnableScriptBlockLogging /t REG_DWORD /d 1 /f



Get-ItemProperty HKLM:\SYSTEM\CurrentControlSet\Services\bam\UserSettings\* | findstr bad


-----[LINUX AUDITING AND LOGGING]-----
--[PROS]--
Remote Logging
	Main system crashes
	Becomes compromised
Historical analysis
	Record of anomalous activity
	Diagnostics of a failure

--[CONS]--
Logs can cryptic
Logging is not free
Logging too much/little
Not analyzing logs
Not looking at the right logs
Time Normalization
Confirmation of critical systems usage

--[LOG TYPES 1]--
Authentication
	/var/log/auth.log - Authentication related events
	/var/run/utmp - Users currently logged in
	/var/log/wtmp - History file for utmp
	/var/log/btmp - Failed login attempts

--[LOG TYPES 2]--
Application
	apache - Web Server (dir)
	apt - Package Manager (dir)
	/var/log/mysql.log

--[LOG TYPES 3]--
System
	/var/log/messages - Legacy Catch all
	/var/log/syslog - Ubuntu/Debian Catch all
	dmesg = Device Messenger (queires /proc/kmsg)
		Kernel Ring Buffer - Never fills
		First logs generated by the system

--[LOGGING AT A GLANCE]--
Location : /var/log
Config File : /etc/rsyslog.conf
Service : /usr/sbin/rsyslo

--[LOGGING DAEMON]--
/usr/sbin/rsyslogd
	User space daemon - Reads messages written to /dev/log and formats and stores them 
	based on /etc/rsyslog.conf rules.
		syslog() via libc
		kernel ring buffer
		audit records via audit subsystem (auditd)

--[JOURNALD LOGS]--
Journald or systemd-journald.service is the logging daemon for systemd init Linux systems
It logs everything in regards to *.units from unit startup status to logs generated by each 
individual unit
Journald stores its logs in binary form
journalctl is the open command that reads them.

journalctl -e
	Tell journalctl to show the last logs its received with -e.
journalctl --list-boots
	Show boot ids which separate logs based on when the machine was restarted
journalctl -b b3076f6774b841e08c19236bf327f529
	Tell journalctl to only show logs relating to that boot id.
journalctl -u ssh.service
	Show only ssh.service logs in journalctl
journalctl -u ssh.service --since "2 days ago"
	Only show logs pertaining to ssh.service from up to 2 days ago in journalctl

--[CONFIG FILE]--
/etc/rsyslog.conf
	Log entries follow syslog standard facility.severity
	facility = what program, or part of system, log is from
	severity = urgency

--[FACILITY CODES]--
0   kernel messages
1   user-level messages
2   mail system
3   system daemons
4   security/authorization messages
5   messages generated internally by syslogd
6   line printer subsystem
7   network news subsystem
8   UUCP subsystem
9   clock daemon
10  security/authorization messages
11  FTP daemon
12  NTP subsystem13|log audit

--[SEVERITY CODES]--
0  emerg, panic:  Emergency: system is unusable
1  alert:         Action must be taken immediately
2  crit:          Critical conditions
3  err, error:    Error conditions
4  warn, warning: Warning conditions
5  notice:        Normal but significant condition
6  info:          Informational messages
7  Debug:         Debug-level messages

facility.severity
mail.info				facilitys and severites are separated by a .
auth,authpriv.*			specific facilities and severities are separated by ,
*.*;auth,authpriv			; mean to exclude
! less than 
 greater than or equal to the severity
@10.10.10.1:514 - remote logging

--[LOG ENUMERATION / MANAGEMENT]--
Best Practices
	Meaningful Naming Schema
	Separate logs logically and by precedence
	Sync time across network
	Control log access
Utilize cron jobs / scripts
	logrotate
		/etc/logrotate.conf
		How large to let files get. How long to keep them.

--[USEFUL LOGGING COMMANDS]--
tail -f - Continuously show end of file
less /var/log/syslog - View Log in page viewer
logger - Send a user generated message to system Log i.e. Starting Update
> /var/log/messages - Wipes Logs
	Why do this as opposed to deleting/recreating files?
last -f /var/log{wtmp,btmp} - Needed to view data files
vim and zcat will read zip files without extracting them
journelctl
journalctl -u ssh.service
journalctl -u ssh.service --since "2 days ago"

--[AUDITING VS LOGGING]--
Logging is system/application defined
Auditing is user defined
[kauditd] - runs at the kernel level and can monitor individual syscalls (/sbin/auditd)
auditctl - control/config command
aureport - summary reports of audit logs
ausearch - query audit logs

--[LOG FORMATS]--
Logs are presented in one the following formats: Simple Text Documents, Markup Languages, and 
JavaScript Object Notation (JSON).
Simple Text Documents - Readable without specific tools and typically work well with ctrl-f 
			 searches or grep
Syslog Message Format
	Each entry is broken into a single line.
	Makes the file easy to parse with grep, findstr, and ctrl-f.
	This cannot be fed into a machine for bulk processing as it lacks serialization
Markup Languages
	Human readable, but designed to be parsed using special programs.
	Uses a schema like HTML so it has tags and attributes like a webpage. Also, it is 
	serialized.
		Difficult to read, but it isn’t impossible
		Parsing this is hard without a specialized querying tool called Xpath
	xpath -q -e '//element/@attribute' file.xml
JavaScript Object Notation (JSON)
	Serialized data interchange format designed to be parsed by machines.
	It is human readable, however it is nigh to read without pretty printing it first.
		Kind of difficult to parse because its length
		Like XML, JSON needs can be queried using special programs. To query JSON use 
		jq or JSON Query.

xml
xpath -q -e "//@addr" output.xml
	prints all the ips of the xml file
xpath -q -e "//@addr | //@portid" output.xml | md5sum
	prints all the ip and port numbers of the xml file
xpath -q -e "//*[@state='open']/../../..//@addr | //*[@state='open']/../..//@portid" output.xml
	prints every IP address and port with open (in use) ports

json
for i in $(cat conn.log | jq '."resp_ip_bytes"'); do if [ $i -gt 40 ]; then echo $i; fi; done | wc -l
	returns the number of all destination ip bytes greater than 40
cat conn.log | jq '."id.orig_h"' conn.log | sort -u | wc -l
	returns the number of unique ips
cat conn.log | jq . | md5sum
	returns the md5hash of the pretty print

-----[ACTIVE DIRECTORY]-----
--[GROUP NESTING]--
multiple groups inside a group
flaw - some groups may have unwanted priviledges

--[LOCAL ADMINISTRATOR LOGON]--
Log in using SAM instead of Active Directory
Never login as administrator
RUNAS
Default local administrator disabled

--[GROUP POLICY OBJECT QUERIES]--
	gpresult
	Get-GPResultantSetOfPolicy
Orgizational Unit - multiple users
domain - multiples OU's
trees - multiple domains
forest - multiple trees

--[SUSPICIOUS ACTIVITY]--
Unknown admin accounts
Active outside normal work hours
Nested groups
Service accounts logging into hosts
User accounts logging into critical infrastructure (i.e. Domain Controller)

--[USER ENUMERATION FOR HUNTING PURPOSES]--
Methods
	CMD
	PowerShell
	Logs
	3rd party software

--[DSTOOLS]--
	DSADD
	DSGET
	DSMOD
	DSMOVE
	DSQUERY

--[POWERSHELL AD COMMANDS]--
(VERB)-AD(NOUN)
	Examples
		Get-ADUser
		New-ADUser -Name "Bad Guy" -PasswordNotRequired 1 -Path "OU=3RD LPT,OU=CCO,OU=3RDBN,OU=WARRIORS,DC=ARMY,DC=WARRIORS"

--[BLOODHOUND]--
Free tool that is used by defenders and attackers to gain a deeper understanding of privilege relationships in an Active Directory environment

--[BLOODHOUND USES]--
Reveal hidden relationships
Identify complex attack paths
Gain better understanding of privilege relationships
Leverages PowerView for advanced querying

--[BLOODHOUND COLLECTED ARTIFACTS]--
Group Membership
Local/Domain Groups/Admins
Domain Trusts
Session Information
GPO/OU Information
Logged on Users

--[POWERVIEW]--
Reconnaissance tool
	Gain situational awareness on Windows domains
Utilizes PowerShell AD functions
Leverages custom built functions focused on HUNT operations

--[INSTALLATION]--
Ensure Anti-virus is temporarily turned off
Download zip file from https://github.com/PowerShellMafia/PowerSploit
Copy the Recon folder to one of the default PowerShell module paths
Import the Recon module
Run Commands!



--[COMMANDS]--
Get-Command -Module ActiveDirectory						<--Get a list of AD Commands Available
Get-ADDefaultDomainPasswordPolicy						<--Get the Default Domain Password Policy
Get-ADForest									<--Get Forest details
Get-ADDomain									<--Get Domain details
Get-ADGroup -Filter *								<--Finds all groups
Get-ADGroup -Identity 'IA Analysts Team'					<--Get a list of a groups members
Get-ADUser -Filter *								<--Finds all users
Get-ADUser -Identity 'Nina.Webster' -Properties Description
Get-ADUser -Filter * | select distinguishedname, name  			<-- DistinguishedName is basically the FQDM (Fully Qualified Domaon Name)
Get-ADUser -Filter {Enabled -eq "FALSE"}					<--Find Disabled users
Enable-ADAccount -Identity guest						<--Enable Account
Add-ADGroupMember -Identity "Domain Admins" -Members guest			<--Add the user to an Admin Group

Disable-ADAccount -Identity guest						<--Disable Account
Set-ADAccountPassword -Identity guest -NewPassword (ConvertTo-SecureString -AsPlainText -String "PassWord12345!!" -Force) 		<--Change the password
New-ADUser -Name "Bad.Guy" -AccountPassword (ConvertTo-SecureString -AsPlaintext -String "PassWord12345!!" -Force) -path "OU=3RD PLT,OU=CCO,OU=3RDBN,OU=WARRIORS,DC=army,DC=warriors" <--Create user
Enable-ADAccount -Identity "Bad.Guy"						<--Enable the user
Add-ADGroupMember -Identity "Domain Admins" -Members "Bad.Guy"		<--Add the user to an Admin Group
Remove-ADUser -Identity "Bad.Guy"						<--Remove User
Disable-AdAccount -Identity Guest						<--Disable Guest account
Remove-ADGroupMember -Identity "Domain Admins" -Members guest		<--Remove From Group
Get-AdGroupMember -identity "Domain Admins" -Recursive | %{Get-ADUser -identity $_.DistinguishedName}					<--|Displays data about the machine and logged on user
Get-AdGroupMember -identity "Domain Admins" -Recursive | %{Get-ADUser -identity $_.DistinguishedName} | select name, Enabled		<--|
gpresult /user Webster /v								<--|Output the computer and user node settings of a user
gpresult /user Administrator /v							<--|	
gpresult /r					<--Displays data about the machine and logged on user
(Get-ADGroupMember -Identity "Domain Admins").Name  				<--Get Name Property from the Active Directory Group named "Domain Admins"
(Get-AdGroupMember -Identity "System Admins LV1").Name			<--Get Active Directory Group 'System' Admin Names 'LvL 1'
(Get-AdGroupMember -Identity "System Admins").Name				<--Get Active Directory Group 'System Admin' Names
(Get-AdGroupMember -Identity "System Admins LV2").Name			<--Get Active Directory Group 'System' Admin Names 'LVL 2'
Search-ADAccount -AccountExpired
Search-ADAccount -PasswordNeverExpired
Get-ADUser -Filter 'userAccountControl -band 128' -Properties userAccountControl	<--List users with "Store passwords using reversible encryption" enabled
Set-ADAccountControl -Identity user01 -AllowReversiblePasswordEncryption $false	<--Disable "Store passwords using reversible encryption"
$env:USERDOMAIN									<--Finds the short name of the domain the user is logged on too

-----[MEMORY ANALYSIS USING VOLATILITY]-----

Volatile Memory
	Non-persistent
	Requires power to maintain the stored information; it retains its contents while powered on but when the power is interrupted, the stored data is immediately lost
		RAM

Non-Volatile Memory
	Persistent
	Does not require a continuous power supply to retain the data stored in a computing device
		HDD
		USB

--[WHY IS THIS IMPORTANT?]--
Data that has not been stored on disk yet is present in memory
Files that have been deleted or modified can be scraped from RAM and used as evidence or for timelining an attack
	Examples:
		Bash history is written to .bash_history once the terminal session is terminated, however each command that has been ran during the current terminal session resides in RAM and can be 
		viewed using the bash plugin
		If the ~/.bash_history has been deleted, using the same method as above we can still retrieve all commands executed
		Logs that have been deleted or modified can be read and scraped from memory using the mfind mcat & mls plugins

--[MEMORY ANALYSIS]--
Analyzing a system’s RAM to determine information about running programs, the operating system, and the overall state of a computer

--[ORDER OF VOLATILITY - THE HALFLIFE OF DATA]--
1. CPU registers, cache
2. Routing table, ARP cache, process table, kernel stats, memory
3. Temporary file systems
4. Disk
5. Remote logging and monitoring data
6. Physical configuration, network topology
7. Archival media - backups

--[VOLATILITY]--
Memory Analysis framework
Volatility provides cross-platform solutions on Windows, Mac OSX, and Linux
Each operating system has its own memory acquisition tool called Persistent Memory (pmem)
	Linpmem
	Winpmem
	OSXpmem

--[UNDERSTAND PROFILES AND PROFILE SELECTION/CREATION]--
What is a profile?
	A Profile provides Volatility with a memory layout based on the kernel of the machine upon which it’s created. This ensures Volatility is able to parse the memory image appropriately and 
	return expected data when given a command
	Volatility hosts a profile repository with most known Windows builds; however, their Linux profile selection is lacking
		Cloning the repository to a local machine is possible for offline analysis needs
	The best practice is to create your own profile for Linux machines

--[PROFILE CREATION/SELECTION]--
WIN Demo:
	imageinfo.sh
LIN Profile Creation:
	cd ~/volatility/tools/linux
	make profile
	vol convert_profile <kernel_version>.zip ubuntu.json

--[INTERACTING WITH A MEMORY DUMP]--
vol.py --profile=<profile> -f <path/to/mem/dump> <plugin>








----------[REVIEW]----------

looking for things that are abnormal

--[PERSISTENCE]--
run keys - remember path
powershell profile - test path
scheduled task  - powershell, autoruns, gui


linux
sysinternal tools
ps -elf
systemctl status <pid>
sudo netstat -anop
sudo netstat -ltup
crontab
/etc/profile - persistence


windows
sysinternal tools
first thing to do on a box
tasklist, gui
user apps should be in program files
netstat -anob
Get-NetTcpConnection
all artifact locations, userassist, bam, recycling bin


Test-Path $PSHome\Profile.ps1
Test-Path $PSHome\Microsoft.Powershell_Profile.ps1
Test-Path $Home\[My]Documents\Profile.ps1
Test-Path $Home\[My]Documents\WindowsPowerShell\Profile.ps1
Test-Path $PSHome\Microsft.PowerShellISE_Profile.ps1
Test-Path $Home\[My]Documents\WindowsPowerShell\Microsoft.PowerShellISE_Profile.ps1




--[SYSINTERNALS]--

net use * http://live.sysinternals.com

New-PSDrive -Name "SysInt" -PSProvider FileSystem -Root "\\live.sysinternals.com\Tools"

$wc = new-object System.Net.WebClient
$wc.DownloadFile("https://download.sysinternals.com/files/SysinternalsSuite.zip","$pwd\SysinternalsSuite.zip")
Expand-Archive SysinternalsSuite.zip







Windows - 10.50.29.205
Linux - 10.50.39.22


xfreerdp /u:student /v:10.50.29.205 +glyph-cache +clipboard +dynamic-resolution












